[{"/home/namdang/_workspace/_repos/my_github/chat-app/src/index.tsx":"1","/home/namdang/_workspace/_repos/my_github/chat-app/src/reportWebVitals.ts":"2","/home/namdang/_workspace/_repos/my_github/chat-app/src/App.tsx":"3","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/index.ts":"4","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/FakeAuth.tsx":"5","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelListContainer.tsx":"6","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelContainer.tsx":"7","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelList.tsx":"8","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelInner.tsx":"9","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/CreateChannel.tsx":"10","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/TeamChannelList.tsx":"11","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/UserList.tsx":"12","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/EditChannel.tsx":"13","/home/namdang/_workspace/_repos/my_github/chat-app/src/services/request.ts":"14","/home/namdang/_workspace/_repos/my_github/chat-app/src/context/context.ts":"15","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/index.js":"16","/home/namdang/_workspace/_repos/my_github/chat-app/src/constants/index.ts":"17","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/ChannelInfo.js":"18","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/InviteIcon.js":"19","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/SearchIcon.js":"20","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/LightningBolt.js":"21","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/AddChannel.tsx":"22","/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/CloseCreateChannel.tsx":"23","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/Chat.tsx":"24"},{"size":495,"mtime":1667606770483,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1667605538052,"results":"27","hashOfConfig":"26"},{"size":977,"mtime":1667658608110,"results":"28","hashOfConfig":"26"},{"size":796,"mtime":1667624896154,"results":"29","hashOfConfig":"26"},{"size":1446,"mtime":1667609285211,"results":"30","hashOfConfig":"26"},{"size":3721,"mtime":1667659411574,"results":"31","hashOfConfig":"26"},{"size":1347,"mtime":1667625040336,"results":"32","hashOfConfig":"26"},{"size":1196,"mtime":1667659097225,"results":"33","hashOfConfig":"26"},{"size":3421,"mtime":1667623804568,"results":"34","hashOfConfig":"26"},{"size":2022,"mtime":1667619557030,"results":"35","hashOfConfig":"26"},{"size":2659,"mtime":1667639284558,"results":"36","hashOfConfig":"26"},{"size":2726,"mtime":1667619282824,"results":"37","hashOfConfig":"26"},{"size":1868,"mtime":1667658477327,"results":"38","hashOfConfig":"26"},{"size":3502,"mtime":1667636342930,"results":"39","hashOfConfig":"26"},{"size":1782,"mtime":1667658597078,"results":"40","hashOfConfig":"26"},{"size":281,"mtime":1667659395966,"results":"41","hashOfConfig":"26"},{"size":1384,"mtime":1667614014375,"results":"42","hashOfConfig":"26"},{"size":757,"mtime":1667625215453,"results":"43","hashOfConfig":"26"},{"size":1093,"mtime":1667615818472,"results":"44","hashOfConfig":"26"},{"size":468,"mtime":1667615206832,"results":"45","hashOfConfig":"26"},{"size":521,"mtime":1667625220845,"results":"46","hashOfConfig":"26"},{"size":870,"mtime":1667614710885,"results":"47","hashOfConfig":"26"},{"size":936,"mtime":1667619534299,"results":"48","hashOfConfig":"26"},{"size":535,"mtime":1667658622638,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"176c7pj",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/namdang/_workspace/_repos/my_github/chat-app/src/index.tsx",[],["102","103"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/reportWebVitals.ts",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/App.tsx",["104","105","106"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/index.ts",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/FakeAuth.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelListContainer.tsx",["107","108"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelContainer.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelList.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/ChannelInner.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/CreateChannel.tsx",["109"],"import React, { useState } from 'react';\n\nimport { UserList } from '.';\nimport { CloseCreateChannel } from '../assets';\nimport CONSTANTS from '../constants';\nimport ServiceRequest from '../services/request';\n\ninterface IChannelNameInputProps {\n\tchannelName?: string;\n\tsetChannelName: any;\n}\ninterface ICreateChannelProps {\n\tcreateType: number;\n\tsetIsCreating: (d: boolean) => void;\n}\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }: IChannelNameInputProps) => {\n\tconst handleChange = (event: any) => {\n\t\tevent.preventDefault();\n\n\t\tsetChannelName(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className='channel-name-input__wrapper'>\n\t\t\t<p>Name</p>\n\t\t\t<input value={channelName} onChange={handleChange} placeholder='channel-name' />\n\t\t\t<p>Add Members</p>\n\t\t</div>\n\t);\n};\n\nconst CreateChannel = ({ createType, setIsCreating }: ICreateChannelProps) => {\n\tconst [selectedUserIds, setSelectedUserIds] = useState<number[]>([]);\n\tconst [channelName, setChannelName] = useState('');\n\n\tconst createChannel = async (e: any) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tconst newChannel = await ServiceRequest.createConversation({\n\t\t\t\ttype: createType,\n\t\t\t\tname: channelName,\n\t\t\t\tmemberIds: selectedUserIds\n\t\t\t});\n\n\t\t\tsetChannelName('');\n\t\t\tsetIsCreating(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='create-channel__container'>\n\t\t\t<div className='create-channel__header'>\n\t\t\t\t<p>{createType === CONSTANTS.CONVERSATION.TYPE.GROUP ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n\t\t\t\t<CloseCreateChannel setIsCreating={setIsCreating} />\n\t\t\t</div>\n\t\t\t{createType === CONSTANTS.CONVERSATION.TYPE.GROUP && <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />}\n\t\t\t<UserList setSelectedUserIds={setSelectedUserIds} />\n\t\t\t<div className='create-channel__button-wrapper' onClick={createChannel}>\n\t\t\t\t<p>{createType === CONSTANTS.CONVERSATION.TYPE.GROUP ? 'Create Channel' : 'Create Message Group'}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CreateChannel;\n","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/TeamChannelList.tsx",["110"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/UserList.tsx",["111"],"import React, { useEffect, useState } from 'react';\nimport { InviteIcon } from '../assets';\nimport { IUser } from '../services/interfaces';\nimport Avatar from 'react-avatar';\nimport ServiceRequest from '../services/request';\n\ninterface IListContainerProps {\n\tchildren: JSX.Element | JSX.Element[];\n}\ninterface IUserItemProps {\n\tindex: number;\n\tkey: number;\n\tuser: IUser;\n\tsetSelectedUserIds: any;\n}\ninterface IUserListProps {\n\tsetSelectedUserIds: (userIds: number[]) => void;\n}\n\nconst ListContainer = ({ children }: IListContainerProps) => {\n\treturn (\n\t\t<div className='user-list__container'>\n\t\t\t<div className='user-list__header'>\n\t\t\t\t<p>User</p>\n\t\t\t\t<p>Invite</p>\n\t\t\t</div>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst UserItem = ({ index, key, user, setSelectedUserIds }: IUserItemProps) => {\n\tconst [selected, setSelected] = useState(false);\n\n\tconst handleSelect = () => {\n\t\tif (selected) {\n\t\t\tsetSelectedUserIds((prevUserIds: number[]) => prevUserIds.filter((prevId) => prevId !== user.id));\n\t\t} else {\n\t\t\tsetSelectedUserIds((prevUserIds: number[]) => [...prevUserIds, user.id]);\n\t\t}\n\n\t\tsetSelected((prevSelected) => !prevSelected);\n\t};\n\n\treturn (\n\t\t<div className='user-item__wrapper' onClick={handleSelect}>\n\t\t\t<div className='user-item__name-wrapper'>\n\t\t\t\t<Avatar src={user.avatar} name={user.username} size='32' />\n\t\t\t\t<p className='user-item__name'>{user.username || user.id}</p>\n\t\t\t</div>\n\t\t\t{selected ? <InviteIcon /> : <div className='user-item__invite-empty' />}\n\t\t</div>\n\t);\n};\n\nconst UserList = ({ setSelectedUserIds }: IUserListProps) => {\n\tconst [users, setUsers] = useState<IUser[]>([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [listEmpty, setListEmpty] = useState(false);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst getUsers = async () => {\n\t\t\tif (loading) return;\n\n\t\t\tsetLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst _users = await ServiceRequest.getAllUsers();\n\n\t\t\t\tif (_users.length) {\n\t\t\t\t\tsetUsers(_users);\n\t\t\t\t} else {\n\t\t\t\t\tsetListEmpty(true);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tgetUsers();\n\t}, []);\n\n\tif (error) {\n\t\treturn (\n\t\t\t<ListContainer>\n\t\t\t\t<div className='user-list__message'>\n\t\t\t\t\tError loading, please refresh and try again.\n\t\t\t\t</div>\n\t\t\t</ListContainer>\n\t\t);\n\t}\n\n\tif (listEmpty) {\n\t\treturn (\n\t\t\t<ListContainer>\n\t\t\t\t<div className='user-list__message'>\n\t\t\t\t\tNo users found.\n\t\t\t\t</div>\n\t\t\t</ListContainer>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ListContainer>\n\t\t\t{loading ? <div className='user-list__message'>\n\t\t\t\tLoading users...\n\t\t\t</div> : (\n\t\t\t\tusers?.map((user, i) => (\n\t\t\t\t\t<UserItem index={i} key={user.id} user={user} setSelectedUserIds={setSelectedUserIds} />\n\t\t\t\t))\n\t\t\t)}\n\t\t</ListContainer>\n\t);\n};\n\nexport default UserList;\n","/home/namdang/_workspace/_repos/my_github/chat-app/src/components/EditChannel.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/services/request.ts",["112","113"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/context/context.ts",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/index.js",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/constants/index.ts",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/ChannelInfo.js",[],["114","115"],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/InviteIcon.js",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/SearchIcon.js",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/LightningBolt.js",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/AddChannel.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/assets/CloseCreateChannel.tsx",[],"/home/namdang/_workspace/_repos/my_github/chat-app/src/components/Chat.tsx",["116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":19},{"ruleId":"121","severity":1,"message":"126","line":13,"column":9,"nodeType":"123","messageId":"124","endLine":13,"endColumn":18},{"ruleId":"121","severity":1,"message":"127","line":116,"column":9,"nodeType":"123","messageId":"124","endLine":116,"endColumn":24},{"ruleId":"121","severity":1,"message":"128","line":116,"column":26,"nodeType":"123","messageId":"124","endLine":116,"endColumn":44},{"ruleId":"121","severity":1,"message":"129","line":41,"column":10,"nodeType":"123","messageId":"124","endLine":41,"endColumn":20},{"ruleId":"121","severity":1,"message":"130","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":83,"column":5,"nodeType":"133","endLine":83,"endColumn":7,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":3,"column":17,"nodeType":"123","messageId":"124","endLine":3,"endColumn":30},{"ruleId":"121","severity":1,"message":"136","line":14,"column":10,"nodeType":"123","messageId":"124","endLine":14,"endColumn":23},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"137","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'ChannelContainer' is defined but never used.","Identifier","unusedVar","'createType' is assigned a value but never used.","'isEditing' is assigned a value but never used.","'toggleContainer' is assigned a value but never used.","'setToggleContainer' is assigned a value but never used.","'newChannel' is assigned a value but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'AxiosResponse' is defined but never used.","'checkResponse' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [loading]",{"range":"143","text":"144"},[2092,2094],"[loading]"]